<?import javafx.geometry.Insets?>
<?import javafx.scene.layout.GridPane?>

<!-- gridPane layout to coś na kształt jakby siatki patrz gridLinesVisible="true"-->
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.ColumnConstraints?>
<GridPane fx:controller="sample.Controller"
          xmlns:fx="http://javafx.com/fxml" alignment="top_center" hgap="10" vgap="10"
          gridLinesVisible="true">
    <!--padding is a space between first row and title bar-->
    <padding>
        <Insets top="10"/>
    </padding>
    <!--<columnConstraints>-->
    <!--this shit makes columns take % of a space on screen-->
        <!--<ColumnConstraints percentWidth="50.0"/>-->
        <!--<ColumnConstraints percentWidth="20.0"/>-->
        <!--<ColumnConstraints percentWidth="30.0"/>-->
    <!--</columnConstraints>-->
    <!-- alignment="center" means that the buttons are starting from center,
          and hgap="10" vgap="10" means that space between them will be 10 pixels -->
    <Button text="Button One" GridPane.rowIndex="0" GridPane.columnIndex="0"
            GridPane.halignment="RIGHT"/>
            <!--GridPane.halignment="" makes the buttons are moved to the chosen direction of grid-->
    <!-- default position of colums and rows is 0, 0 -->
    <Button text="Button Two" GridPane.rowIndex="0" GridPane.columnIndex="1"/>
    <Button text="Button Three" GridPane.rowIndex="1" GridPane.columnIndex="0"/>
    <Button text="Really Long Button four " GridPane.rowIndex="4" GridPane.columnIndex="0"
        GridPane.columnSpan="2"/>
    <Button text="Button Five" GridPane.rowIndex="2" GridPane.columnIndex="0"/>

</GridPane>